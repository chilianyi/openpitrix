apiVersion: v1
kind: Service
metadata:
  name: openpitrix-app-manager
  namespace: ${NAMESPACE}
  labels:
    app: openpitrix
    component: openpitrix-app-manager
spec:
  selector:
    app: openpitrix
    component: openpitrix-app-manager
  ports:
  - name: openpitrix-app-manager
    protocol: TCP
    port: 9102
    targetPort: 9102
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: openpitrix-app-manager-deployment
  namespace: ${NAMESPACE}
  labels:
    app: openpitrix
    component: openpitrix-app-manager
spec:
  selector:
    matchLabels:
      app: openpitrix
      component: openpitrix-app-manager
  replicas: 1
  template:
    metadata:
      labels:
        app: openpitrix
        component: openpitrix-app-manager
    spec:
      initContainers:
      - name: wait-mysql
        image: busybox:1.28.4
        imagePullPolicy: IfNotPresent
        command: ['sh', '-c', 'until nc -z openpitrix-db.${NAMESPACE}.svc.cluster.local 3306; do echo "waiting for mysql"; sleep 2; done;']
      - name: wait-etcd
        image: busybox:1.28.4
        imagePullPolicy: IfNotPresent
        command: ['sh', '-c', 'until nc -z openpitrix-etcd.${NAMESPACE}.svc.cluster.local 2379; do echo "waiting for etcd"; sleep 2; done;']
      containers:
      - name: openpitrix-app-manager
        image: ${IMAGE}
        imagePullPolicy: Always
        command:
          - app-manager
        ports:
        - containerPort: 9102
          name: app-manager
        env:
        - name: OPENPITRIX_LOG_LEVEL
          value: ${OPENPITRIX_LOG_LEVEL}
        - name: OPENPITRIX_MYSQL_DATABASE
          value: "app"
        - name: OPENPITRIX_MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password.txt
              name: mysql-pass
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 500m
            memory: 500Mi
---
apiVersion: v1
kind: Service
metadata:
  name: openpitrix-category-manager
  namespace: ${NAMESPACE}
  labels:
    app: openpitrix
    component: openpitrix-category-manager
spec:
  selector:
    app: openpitrix
    component: openpitrix-category-manager
  ports:
  - name: openpitrix-category-manager
    protocol: TCP
    port: 9113
    targetPort: 9113
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: openpitrix-category-manager-deployment
  namespace: ${NAMESPACE}
  labels:
    app: openpitrix
    component: openpitrix-category-manager
spec:
  selector:
    matchLabels:
      app: openpitrix
      component: openpitrix-category-manager
  replicas: 1
  template:
    metadata:
      labels:
        app: openpitrix
        component: openpitrix-category-manager
    spec:
      initContainers:
      - name: wait-mysql
        image: busybox:1.28.4
        imagePullPolicy: IfNotPresent
        command: ['sh', '-c', 'until nc -z openpitrix-db.${NAMESPACE}.svc.cluster.local 3306; do echo "waiting for mysql"; sleep 2; done;']
      - name: wait-etcd
        image: busybox:1.28.4
        imagePullPolicy: IfNotPresent
        command: ['sh', '-c', 'until nc -z openpitrix-etcd.${NAMESPACE}.svc.cluster.local 2379; do echo "waiting for etcd"; sleep 2; done;']
      containers:
      - name: openpitrix-category-manager
        image: ${IMAGE}
        imagePullPolicy: Always
        command:
          - category-manager
        ports:
        - containerPort: 9108
          name: category-mgr
        env:
        - name: OPENPITRIX_LOG_LEVEL
          value: ${OPENPITRIX_LOG_LEVEL}
        - name: OPENPITRIX_MYSQL_DATABASE
          value: "app"
        - name: OPENPITRIX_MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password.txt
              name: mysql-pass
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 500m
            memory: 500Mi
